{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAUT,EACVU,SAnBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCiBLO,EAfK,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG9B,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,mCAEI,sBAAKgB,UAAU,uBAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAKA,EAAL,aCkBDS,EAzBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEf,ECDwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAAEtB,IAGEuB,EDjBmBK,CAAc5B,GAAhCO,EAAR,EAAQA,KAAMe,EAAd,EAAcA,QAEd,OACI,qCACI,6BAAKtB,IACHsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEQX,EAAKE,KAAK,SAACC,GAAD,OACN,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEenBkB,EA1BO,WAElB,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GACZ,OACI,cAAC,EAAD,CAEAA,SAAWA,GADDA,Y,MCbtC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7b871f4e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setcategories }) => {\r\n\r\n    const [inputvalue, setinputvalue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setinputvalue(e.target.value);\r\n    } \r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputvalue.trim().length > 2 ){\r\n            setcategories( cats => [ inputvalue, ...cats] );\r\n            setinputvalue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value = { inputvalue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=G3D9alUeMcAyCZIt3ZabLVVgiUzW34bL&limit=10`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React, { Fragment } from 'react'\r\n\r\nconst GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log(id,title,url);\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"card animate__fadeIn\">\r\n                <img src={ url } alt={ title } />\r\n                <p> {title} </p>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p>Loading</p> } \r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map( (img) =>(\r\n                        <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                        />                                                \r\n                    ) )  \r\n                }    \r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n       \r\n        getGifs( category )\r\n            .then( imgs  => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            } )\r\n    }, [ category ] );\r\n\r\n\r\n    return state; //{ data: [], loading: true }\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gift Expert App</h2>\r\n            <AddCategory setcategories= { setcategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return (\r\n                            <GifGrid \r\n                                key ={category}\r\n                            category={ category } \r\n                            />\r\n                        )\r\n                    } )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}